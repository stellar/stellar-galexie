name: Go

on:
  push:
    branches: [master]
  pull_request:

jobs:
  complete:
    if: always()
    needs: [check, build, test]
    runs-on: ubuntu-22.04
    steps:
    - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
      run: exit 1

  check:
    strategy:
      matrix:
        os: [ubuntu-22.04]
        go: ["1.23"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        # For pull requests, build and test the PR head not a merge of the PR with the destination.
        ref: ${{ github.event.pull_request.head.sha || github.ref }}
    - uses: ./.github/actions/setup-go
      with:
        go-version: ${{ matrix.go }}
    - run: ./gomod.sh
    - run: ./gofmt.sh
    - run: ./govet.sh
    - run: ./staticcheck.sh

  build:
    strategy:
      matrix:
        os: [ubuntu-22.04]
        go: ["1.22", "1.23"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        # For pull requests, build and test the PR head not a merge of the PR with the destination.
        ref: ${{ github.event.pull_request.head.sha || github.ref }}
    - uses: ./.github/actions/setup-go
      with:
        go-version: ${{ matrix.go }}
    - run: go build ./...

  test:
    strategy:
      matrix:
        os: [ubuntu-22.04]
        go: ["1.22", "1.23"]
        pg: [12, 16]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        # For pull requests, build and test the PR head not a merge of the PR with the destination.
        ref: ${{ github.event.pull_request.head.sha || github.ref }}
        # We need to full history for git-restore-mtime to know what modification dates to use.
        # Otherwise, the Go test cache will fail (due to the modification time of fixtures changing).
        fetch-depth: '0'
    - uses: ./.github/actions/setup-go
      with:
        go-version: ${{ matrix.go }}
    - run: go test -race -cover ./...
